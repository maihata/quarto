---
title: "Visualization 4: oddsratio()"
author: "Maiko Hata"
date: "2025-03-02"
categories: [data visualization, code, analysis]
image: "or_us_white_ci_timesnewroman.png"
---

Here, the data storytelling really comes together. Based on the previous analysis and visualization of the chi-square results with standardized residuals, I decided to run odds ratios for some of the most notable cells that showed statistically significant disparities.

The odds ratio analysis is a common way to measure how much more or less likely an outcome is for one group compared to another (Hosmer et al., 2013). However, if not used mindfully, the results can be too simplistic and may end up reinforcing common narratives that unfairly blame certain groups for disparities. This kind of oversimplification ignores the complexity of intersectionality (Crenshaw, 1989) that marginalized communities live. Itâ€™s also worth noting that Karl Pearson, who created the chi-square test, is believed to have developed statistical tools to support his interests in eugenics (Castillo & Strunk, 2025, p. 3).

First, I ran an odds ratio analysis for the Disqualification category across all racial groups. Then, I tried creating bar charts to visualize the results.

```{r include=FALSE}

library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
library(distill)
library(tibble)
library(rcartocolor)
library(ggplot2)
library(quarto)
library(epitools)
```

```{r}
or_us_white <- data.frame(
  group = c(
    "American Indian/Alaska Native", 
    "Asian", 
    "Black/African American", 
    "Hispanic/Latino", 
    "More than Two Races", 
    "Pacific Islander", 
    "White (Reference)"),
  odds_ratio = c(
    2.501309, 
    0.7388185, 
    2.456352, 
    1.619882, 
    1.479668, 
    1.588854, 
    1)
)
```

```{r}
ggplot(or_us_white, 
       aes(x = factor(group, 
                      levels = sort(unique(group))), 
           y = odds_ratio)) +
  geom_col(fill = "skyblue") +
  geom_hline(
    yintercept = 1, 
    linetype = "dashed", 
    color = "red") +  
  labs(title = "Odds Ratios Compared to White (Reference)", 
       x = "Race", 
       y = "Odds Ratio") +
  theme_minimal()
```

```{r}
# with flipped coordinates
  ggplot(or_us_white, 
         aes(
           x = factor(
             group, 
             levels = sort(unique(group))), 
           y = odds_ratio)) +
  geom_col(
    fill = "skyblue") +
  geom_hline(
    yintercept = 1, 
    linetype = "dashed", 
    color = "red") +  
  coord_flip() +  
  labs(
    title = "Odds Ratios Compared to White (Reference)", 
    x = "Group", 
    y = "Odds Ratio"
  ) +
  theme_minimal()
```

However, it is important to use a forest plot for odds ratios because it is a recommended approach. This is because forest plots can show confidence intervals, making it easier to understand the precision of each estimate. They also illustrate odds ratios more clearly than bar charts. To create a forest plot, we need to prepare a table that includes not only the odds ratios but also the confidence intervals for each comparison.

Here, I used `geom_errorbar()` from `ggplot()`.

```{r}
or_us_white_ci <- data.frame(
  group = c(
    "American Indian/Alaska Native", 
    "Asian", 
    "Black/African American", 
    "Hispanic/Latino", 
    "More than Two Races", 
    "Pacific Islander", 
    "White (Reference)"),
  odds_ratio = c(
    2.501309, 
    0.7388185, 
    2.456352, 
    1.619882, 
    1.479668, 
    1.588854, 
    1), 
  ci_lower = c(
    2.408865, 
    0.7200855, 
    2.429572, 
   1.60425, 
   1.450269, 
   1.486348, 
   0.950000), 
  ci_upper = c(
   2.596393, 
  0.7578737, 
  2.483474, 
  1.635544, 
  1.50953, 
  1.696447, 
  1.050000)
)
```

```{r}
ggplot(or_us_white_ci, 
       aes(x = group, 
           y = odds_ratio)) +
  geom_point(size = 3, 
             color = "skyblue") +  
  geom_errorbar(aes(
    ymin = ci_lower, 
    ymax = ci_upper), 
    width = 0.2) +  
  geom_hline(
    yintercept = 1, 
    linetype = "dashed", 
    color = "red") +  
  coord_flip() +  
  labs(
    title = "Forest Plot of Odds Ratios",
    x = "Race",
    y = "Odds Ratio"
  ) +
  theme_minimal()
```

Then, I reversed the alphabetical order of the Y-axis.

```{r}
or_us_white_ci$group <- factor(or_us_white_ci$group, levels = rev(sort(unique(or_us_white_ci$group))))
```

Finally, I made the followoing adjustments to make the chart easier to read:

-   Increased the size of the blue dots

-   Made the the X-axis labels larger

-   Added data labels above the dots.

Do you notice how the odds ratios highlight the over- and under-representation of different groups in the "Disqualification" category? (Just a reminder, this category represents cases where agencies "lose contact" with families, leading to disqualification.)

Moving forward, I plan to re-analyze the same dataset by comparing each group to the overall category average across all races. This way, I can avoid using White children and families as the standard for comparison.

```{r}
ggplot(or_us_white_ci, 
       aes(x = group, 
           y = odds_ratio)) +
  geom_point(size = 4, 
             color = "skyblue") +  
  geom_errorbar(aes(
    ymin = ci_lower, 
    ymax = ci_upper), 
    width = 0.4) +  
  geom_text(aes(
    label = round(odds_ratio, 2)), 
    vjust = -1.5, size = 3.5) +  
  geom_hline(yintercept = 1, 
             linetype = "dashed", 
             color = "red") +  
  coord_flip() +  
  labs(
    title = "Odds Ratio for Exiting EI via Disqualification (National)",
    x = "Group",
    y = "Odds Ratio"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10)
  )

```
