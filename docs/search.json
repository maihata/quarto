[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, I’m Maiko (here’s how to pronounce my name)! I created this blog as part of my Educational Data Science course at the University of Oregon, where I am a doctorate student in educational leadership.\nI also work as an Autism & Behavior Consultant at an outreach agency, Early Childhood CARES, in the College of Education. This role motivated me to learn more so I can better support infants and toddlers who experience Autism and/or Developmental Disability and their families.\nFor more information, please check out my LinkedIn page!"
  },
  {
    "objectID": "posts/viz_2/index.html",
    "href": "posts/viz_2/index.html",
    "title": "Visualization 2: ggplot geom_bar()",
    "section": "",
    "text": "This is the second part of my data visualization journey. For this, I used the same dataset as in the previous post, which showed racial representation in Early Intervention across the country. I compared that data to racial representation in Oregon, using information from the same OSEP website. I combined data from 2013 to 2022 to get the most statistical power for later analysis.\nFirst, I created a bar chart using ggplot() with the geom_bar() function.\nCode\nggplot(childcount1920USOR_long, \n       aes(x = state, y = percent, fill = race)) +\n  geom_bar(stat = \"identity\") + \n  scale_y_continuous(labels = scales::percent_format(scale = 1)) + \n  scale_fill_discrete(labels = c(\"American Indian\")) +\n  labs(title = \"Percentage of Child Count by Race in US & Oregon\",\n       x = \"State\",\n       y = \"Percentage\",\n       fill = \"Race\") +\n  theme_minimal()\nHere is an example of how labeling can be completely inappropriate. However, I appreciate using the viridis color palette with scale_fill_viridis_d(), as it helps make colors more accessible for people with color perception differences. I also included labels for the different groups to show the color scheme more clearly.\nCode\nggplot(childcount1920USOR_long, aes(x = state, y = percent, fill = race)) +\n  geom_bar(stat = \"identity\") + \n  scale_fill_viridis_d() +  \n  scale_y_continuous(labels = percent_format(scale = 1)) +\n  labs(title = \"Percentage of Child Count by Race in US & Oregon\",\n       x = \"State\",\n       y = \"Percentage\",\n       fill = \"Race\") +\n  geom_text(aes(label = race), \n            position = position_stack(vjust = 0.5), \n            color = \"black\", \n            size = 4) +\n  theme_minimal()\nI really enjoy how easy it is to play with different types of plots that ggplot() offers - all it takes is just minor changes to the codes.\nCode\nggplot(childcount1920USOR_long, aes(x = state, y = percent, fill = race)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +  \n  scale_fill_viridis_d() +  \n  scale_y_continuous(labels = percent_format(scale = 1)) +  \n  labs(title = \"Percentage of Child Count by Race in US & Oregon\",\n       x = \"State\",\n       y = \"Percentage\",\n       fill = \"Race\") +\n  theme_minimal()\nSo, I kept experimenting.\nCode\nggplot(childcount1920USOR_long, \n       aes(x = race, \n           y = percent, \n           fill = state)) +\n  geom_bar(stat = \"identity\", \n           position = position_dodge(width = 0.7)) +  \n  scale_fill_viridis_d() +  \n  scale_y_continuous(\n    labels = percent_format(scale = 1), \n    expand = expansion(mult = c(0, 0.05))) +\n  labs(title = \"Percentage of Child Count by Race in US & Oregon\",\n       x = \"Race\",\n       y = \"Percentage\",\n       fill = \"State\") +\n  geom_text(aes(label = scales::percent(percent / 100, accuracy = 0.1)), \n            position = position_dodge(width = 0.7), \n            vjust = -0.5,  \n            color = \"black\", \n            size = 4) +\n  theme_minimal(base_size = 14) +\n  theme(legend.position = \"bottom\")\nAfter making adjustments to show the data more clearly and accurately, here it is—the final version that shows the data best! Flipping the X and Y axes helps readers understand the categories more easily, and the data labels make it clearer to see the exact differences between the national data and Oregon’s data. I also used the Okabe-Ito color palette, assigning specific colors for both the national data and Oregon’s data to maintain consistency in future visualizations."
  },
  {
    "objectID": "posts/viz_2/index.html#help-why-does-it-not-flip-alphabetically-on-y-axis-and-why-does-it-now-show-the-us-average",
    "href": "posts/viz_2/index.html#help-why-does-it-not-flip-alphabetically-on-y-axis-and-why-does-it-now-show-the-us-average",
    "title": "Visualization 2: ggplot geom_bar()",
    "section": "HELP: Why does it not flip alphabetically on Y axis, and WHY does it now show the “US average”",
    "text": "HELP: Why does it not flip alphabetically on Y axis, and WHY does it now show the “US average”\n\n\nCode\nokabe_ito_colors &lt;- c(\n  \"US\" = pal_aaas(\"default\")(10)[6],      \n  \"Oregon\" = pal_aaas(\"default\")(10)[3])  \n\nggplot(childcount1920USOR_long, \n       aes(x = percent, \n           y = race, \n           fill = state)) +\n  geom_bar(stat = \"identity\", \n           position = position_dodge(\n          width = 0.7)) +  \n  scale_fill_manual(\n    values = okabe_ito_colors, \n    breaks = c(\"US\", \"Oregon\"),         \n    labels = c(\"US\", \"Oregon\")          \n  ) +\n  scale_x_continuous(\n    labels = percent_format(scale = 1), \n    expand = expansion(mult = c(0, 0.05))) +\n  labs(\n    title = \"Percentage of Child Count by Race in US & Oregon\",\n    x = \"Percentage\",\n    y = \"Race\",\n    fill = NULL) +\n  geom_text(aes(\n    label = scales::percent(percent / 100, accuracy = 0.1)), \n    position = position_dodge(width = 0.7), \n    hjust = -0.2,  \n    color = \"black\", \n    size = 4) +  \n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "posts/viz_3/index.html",
    "href": "posts/viz_3/index.html",
    "title": "Visualization 3: corrplot()",
    "section": "",
    "text": "Here, I performed a chi-square test and used standardized residuals to interpret the results. I visualized the findings with corrplot(), one of my favorite packages.\nChi-square test is used to determine if the distribution of a sample is different from what we would expect by chance (Agresti, 2013). It helps researchers understand whether the differences between observed and expected counts are likely due to random variation (Morgan et al., 2020). Standardized residuals provide additional insight by showing how much the observed counts differ from the expected ones, considering the influence of independent variables on dependent variables (Chatterjee, 2011).\nThis is when I truly understood the power and flexibility of R, as it allowed me to present the story of the data through clear and intuitive visualizations.\nDo you notice how group 2 is overrepresented and group 7 is underrepresented in Attempts to Contact Unsuccessful (“Disqualification”)? Also, group 7 is noticeably underrepresented in Part B Eligibility Not Determined (“Not Determined”), but the same group is overrepresented in Complete or Not Eligible (“Not Eligible”). Let’s take a look at who these groups are.\nHere is my first attempt. Even though it’s a bit messy, I was really impressed that I could run this analysis and create the visualization so easily.\n\n\nCode\ncorrplot(chi_results$stdres, \n         is.cor = FALSE, \n         tl.cex = 0.7)\n\n\n\n\n\n\n\n\n\nThen, I renamed the columns and rows, and experimented with different plots.\n\n\nCode\n# corrplot(chi_results$stdres, \n#         is.cor = FALSE, \n#         tl.cex = 0.3)\n\n\n\n\nCode\n# corrplot(chi_results$stdres, \n#         is.cor = FALSE, \n#         tl.cex = 0.6)\n\n\n\n\nCode\ncorrplot(chi_results$stdres, \n         method = 'square', \n         is.cor = FALSE, \n         tl.cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# corrplot(chi_results$stdres, \n#         method = 'ellipse', \n#         is.cor = FALSE, \n#         tl.cex = 0.6)\n\n\n\n\nCode\n# corrplot(chi_results$stdres, \n#       is.cor = FALSE, \n#        tl.cex = 0.8, \n#         cl.cex = 0.7, \n#         cl.offset = 0.5) \n\n\nI finally settled on this version after moving the label numbers a bit further out to make them easier to read. I also reordered the exit categories alphabetically at the top, which makes the chart look a bit different from my original attempt.\n\n\nCode\ncorrplot(chi_results$stdres, \n         is.cor = FALSE, \n         tl.cex = 0.8, \n         cl.cex = 0.7,     \n         cl.offset = 1,    \n         cl.ratio = 0.2)"
  },
  {
    "objectID": "posts/viz_1/index.html",
    "href": "posts/viz_1/index.html",
    "title": "Visualization 1: kable()",
    "section": "",
    "text": "This is the first step in my visualization journey. I created a simple kable table using data from the Office of Special Education Programs (OSEP).\nTo give some background, my dissertation will focus on equitable access to Early Intervention (EI) for different groups. Some of the visualizations in this blog will be adjusted to allow for stronger statistical analysis, such as by incorporating census data.\nHere’s what my dataset looked like after I finished wrangling the data:\n\n\nCode\nprint(race_us_chart)\n\n\n# A tibble: 7 × 7\n  Race                  Disqualified `Moved Out` `Not Determined` `Not Eligible`\n  &lt;chr&gt;                        &lt;dbl&gt;       &lt;dbl&gt;            &lt;dbl&gt;          &lt;dbl&gt;\n1 Alaska Native or Ame…         3262        1045             2480           4395\n2 Asian                         6559        8031            22848          26712\n3 Black or African Ame…        56155       14648            69687          65353\n4 Hispanic or Latino           79951       26699           173416         165654\n5 Two or More Races            11676        6477            15813          28996\n6 Pacific Islander               977         559             1532           1911\n7 White                        99922       65399           178843         402568\n# ℹ 2 more variables: `Part B Eligible` &lt;dbl&gt;, Withdrawn &lt;dbl&gt;\n\n\nThis may look like a simple visualization, but it took a lot of work to clean up the data to get here! I used many functions for data wrangling, including: filter(), select(), mutate(), bind_rows(), mutate(), group_by(), pivot_longer(), pivot_wider(), and summarize(). Just a few months ago, I was completely new to R, RStudio, and GitHub.\n\nI WANT TO MAKE THE HEADER BOLD. Also the headers should be centered\n\n\nCode\nkable(race_us_chart, \n      caption = \n        \"Exit Reasons and Race (National)\") %&gt;% \n  kable_styling(\n    full_width = F, \n    position = \"left\")\n\n\n\nExit Reasons and Race (National)\n\n\nRace\nDisqualified\nMoved Out\nNot Determined\nNot Eligible\nPart B Eligible\nWithdrawn\n\n\n\n\nAlaska Native or American Indian\n3262\n1045\n2480\n4395\n9035\n3155\n\n\nAsian\n6559\n8031\n22848\n26712\n52840\n21737\n\n\nBlack or African American\n56155\n14648\n69687\n65353\n139607\n48699\n\n\nHispanic or Latino\n79951\n26699\n173416\n165654\n318999\n109469\n\n\nTwo or More Races\n11676\n6477\n15813\n28996\n50699\n19195\n\n\nPacific Islander\n977\n559\n1532\n1911\n3587\n1467\n\n\nWhite\n99922\n65399\n178843\n402568\n623690\n242489\n\n\n\n\n\n\n\n\n\nCode\nkable(race_us_chart, \n      caption = \"Exit Reasons and Race (National)\", \n      align = \"c\") %&gt;%  # Centers both headers and content\n  kable_styling(\n    full_width = F, \n    position = \"center\",  # Centers the entire table\n    bootstrap_options = c(\"striped\", \"hover\")) %&gt;%   # Adds striped rows and hover effect\n  row_spec(0, align = \"c\")                           # Centers header row\n\n\n\nExit Reasons and Race (National)\n\n\nRace\nDisqualified\nMoved Out\nNot Determined\nNot Eligible\nPart B Eligible\nWithdrawn\n\n\n\n\nAlaska Native or American Indian\n3262\n1045\n2480\n4395\n9035\n3155\n\n\nAsian\n6559\n8031\n22848\n26712\n52840\n21737\n\n\nBlack or African American\n56155\n14648\n69687\n65353\n139607\n48699\n\n\nHispanic or Latino\n79951\n26699\n173416\n165654\n318999\n109469\n\n\nTwo or More Races\n11676\n6477\n15813\n28996\n50699\n19195\n\n\nPacific Islander\n977\n559\n1532\n1911\n3587\n1467\n\n\nWhite\n99922\n65399\n178843\n402568\n623690\n242489\n\n\n\n\n\n\n\nI will build on this simple kable table to start analyzing the data more deeply. But first, I will show how disparities appear across the United States, where racially marginalized children are often underserved in Early Intervention, unlike in K-12 special education."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To Maiko’s Blog",
    "section": "",
    "text": "Welcome to my blog! I created this blog as part of my Educational Data Science course at the University of Oregon, where I am a doctorate student in educational leadership. Just a few months ago, I was completely new to R, RStudio, and GitHub.\nI also work as an Autism & Behavior Consultant at an outreach agency, Early Childhood CARES, in the College of Education. This role motivated me to learn more so I can better support infants and toddlers who experience Autism and/or Developmental Disability and their families.\nFor more information, please check out my LinkedIn page!\n\n\n\nUniversity of Oregon sign with flowers"
  },
  {
    "objectID": "posts/viz_4/index.html",
    "href": "posts/viz_4/index.html",
    "title": "Visualization 4: oddsratio()",
    "section": "",
    "text": "Here, the data storytelling really comes together. Based on the previous analysis and visualization of the chi-square results with standardized residuals, I decided to run odds ratios for some of the most notable cells that showed statistically significant disparities.\nThe odds ratio analysis is a common way to measure how much more or less likely an outcome is for one group compared to another (Hosmer et al., 2013). However, if not used mindfully, the results can be too simplistic and may end up reinforcing common narratives that unfairly blame certain groups for disparities. This kind of oversimplification ignores the complexity of intersectionality (Crenshaw, 1989) that marginalized communities live. It’s also worth noting that Karl Pearson, who created the chi-square test, is believed to have developed statistical tools to support his interests in eugenics (Castillo & Strunk, 2025, p. 3).\nFirst, I ran an odds ratio analysis for the Disqualification category across all racial groups. Then, I tried creating bar charts to visualize the results.\n\n\nCode\nor_us_white &lt;- data.frame(\n  group = c(\n    \"American Indian/Alaska Native\", \n    \"Asian\", \n    \"Black/African American\", \n    \"Hispanic/Latino\", \n    \"More than Two Races\", \n    \"Pacific Islander\", \n    \"White (Reference)\"),\n  odds_ratio = c(\n    2.501309, \n    0.7388185, \n    2.456352, \n    1.619882, \n    1.479668, \n    1.588854, \n    1)\n)\n\n\n\n\nCode\nggplot(or_us_white, \n       aes(x = factor(group, \n                      levels = sort(unique(group))), \n           y = odds_ratio)) +\n  geom_col(fill = \"skyblue\") +\n  geom_hline(\n    yintercept = 1, \n    linetype = \"dashed\", \n    color = \"red\") +  \n  labs(title = \"Odds Ratios Compared to White (Reference)\", \n       x = \"Race\", \n       y = \"Odds Ratio\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\n# with flipped coordinates\n  ggplot(or_us_white, \n         aes(\n           x = factor(\n             group, \n             levels = sort(unique(group))), \n           y = odds_ratio)) +\n  geom_col(\n    fill = \"skyblue\") +\n  geom_hline(\n    yintercept = 1, \n    linetype = \"dashed\", \n    color = \"red\") +  \n  coord_flip() +  \n  labs(\n    title = \"Odds Ratios Compared to White (Reference)\", \n    x = \"Group\", \n    y = \"Odds Ratio\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nHowever, it is important to use a forest plot for odds ratios because it is a recommended approach. This is because forest plots can show confidence intervals, making it easier to understand the precision of each estimate. They also illustrate odds ratios more clearly than bar charts. To create a forest plot, we need to prepare a table that includes not only the odds ratios but also the confidence intervals for each comparison.\nHere, I used geom_errorbar() from ggplot().\n\n\nCode\nor_us_white_ci &lt;- data.frame(\n  group = c(\n    \"American Indian/Alaska Native\", \n    \"Asian\", \n    \"Black/African American\", \n    \"Hispanic/Latino\", \n    \"More than Two Races\", \n    \"Pacific Islander\", \n    \"White (Reference)\"),\n  odds_ratio = c(\n    2.501309, \n    0.7388185, \n    2.456352, \n    1.619882, \n    1.479668, \n    1.588854, \n    1), \n  ci_lower = c(\n    2.408865, \n    0.7200855, \n    2.429572, \n   1.60425, \n   1.450269, \n   1.486348, \n   0.950000), \n  ci_upper = c(\n   2.596393, \n  0.7578737, \n  2.483474, \n  1.635544, \n  1.50953, \n  1.696447, \n  1.050000)\n)\n\n\n\n\nCode\nggplot(or_us_white_ci, \n       aes(x = group, \n           y = odds_ratio)) +\n  geom_point(size = 3, \n             color = \"skyblue\") +  \n  geom_errorbar(aes(\n    ymin = ci_lower, \n    ymax = ci_upper), \n    width = 0.2) +  \n  geom_hline(\n    yintercept = 1, \n    linetype = \"dashed\", \n    color = \"red\") +  \n  coord_flip() +  \n  labs(\n    title = \"Forest Plot of Odds Ratios\",\n    x = \"Race\",\n    y = \"Odds Ratio\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThen, I reversed the alphabetical order of the Y-axis.\n\n\nCode\nor_us_white_ci$group &lt;- factor(or_us_white_ci$group, levels = rev(sort(unique(or_us_white_ci$group))))\n\n\nFinally, I made the followoing adjustments to make the chart easier to read:\n\nIncreased the size of the blue dots\nMade the the X-axis labels larger\nAdded data labels above the dots.\n\nDo you notice how the odds ratios highlight the over- and under-representation of different groups in the “Disqualification” category? (Just a reminder, this category represents cases where agencies “lose contact” with families, leading to disqualification.)\nMoving forward, I plan to re-analyze the same dataset by comparing each group to the overall category average across all races. This way, I can avoid using White children and families as the standard for comparison.\n\n\nCode\nggplot(or_us_white_ci, \n       aes(x = group, \n           y = odds_ratio)) +\n  geom_point(size = 4, \n             color = \"skyblue\") +  \n  geom_errorbar(aes(\n    ymin = ci_lower, \n    ymax = ci_upper), \n    width = 0.4) +  \n  geom_text(aes(\n    label = round(odds_ratio, 2)), \n    vjust = -1.5, size = 3.5) +  \n  geom_hline(yintercept = 1, \n             linetype = \"dashed\", \n             color = \"red\") +  \n  coord_flip() +  \n  labs(\n    title = \"Odds Ratio for Exiting EI via Disqualification (National)\",\n    x = \"Group\",\n    y = \"Odds Ratio\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 10)\n  )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Maiko’s Data Visualization Blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 28, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nVisualization 1: kable()\n\n\n\n\n\n\nvisualization\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 28, 2025\n\n\nMaiko Hata\n\n\n\n\n\n\n\n\n\n\n\n\nVisualization 3: corrplot()\n\n\n\n\n\n\nvisualization\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 28, 2025\n\n\nMaiko Hata\n\n\n\n\n\n\n\n\n\n\n\n\nVisualization 4: oddsratio()\n\n\n\n\n\n\ndata visualization\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 28, 2025\n\n\nMaiko Hata\n\n\n\n\n\n\n\n\n\n\n\n\nVisualization 2: ggplot geom_bar()\n\n\n\n\n\n\nvisualization\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 28, 2025\n\n\nMaiko Hata\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To Maiko’s Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 25, 2025\n\n\nMaiko Hata\n\n\n\n\n\n\nNo matching items"
  }
]